{"ast":null,"code":"var _jsxFileName = \"/Users/christopher/Documents/vschoolwork/assignments/rtv/client/my-app/src/context/IssueProvider.js\";\nimport React, { useState, useCallback } from \"react\";\nimport axios from \"axios\";\nexport const IssueContext = React.createContext();\nconst issueAxios = axios.create();\nissueAxios.interceptors.request.use(config => {\n  config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`;\n  return config;\n});\nconst initState = {\n  issues: [],\n  issue: {},\n  voteErr: \"\"\n};\nexport default function IssueProvider(props) {\n  const [issueState, setIssueState] = useState(initState);\n  const getIssues = useCallback(() => {\n    issueAxios.get(\"/api/issue\").then(res => setIssueState(prev => ({ ...prev,\n      issues: res.data\n    }))).catch(err => console.log(err));\n  }, []);\n  const getIssue = useCallback(_id => {\n    issueAxios.get(`/api/issue/${_id}`).then(res => {\n      console.log(res);\n      setIssueState(prev => ({ ...prev,\n        issue: res.data\n      }));\n    }).catch(err => console.log(err));\n  }, []);\n\n  const addIssue = newIssue => {\n    issueAxios.post(\"/api/issue\", newIssue).then(res => setIssueState(prev => ({ ...prev,\n      issues: [...prev.issues, res.data]\n    })));\n  };\n\n  const vote = (_id, direction) => {\n    issueAxios.put(`/api/issue/${direction}vote/${_id}`).then(res => {\n      setIssueState(prev => ({ ...prev,\n        issues: prev.issues.map(issue => issue._id === _id ? res.data : issue)\n      }));\n    }).catch(err => handleVoteErr(err.response.data.errMsg));\n  }; // get the comments for a specific post by ID\n\n\n  const getComments = useCallback(_id => {\n    issueAxios.get(`/api/comment/${_id}`).then(res => {\n      setIssueState(prev => {\n        const issueToUpdate = Object.assign({}, prev.issue);\n        issueToUpdate.comments.push(...res.data);\n        return { ...prev,\n          issue: issueToUpdate\n        };\n      });\n    }).catch(err => console.log(err));\n  }, []);\n\n  const addComment = (_id, comment) => {\n    issueAxios.post(`/api/comment/${_id}`, comment).then(res => {\n      const issueToUpdate = Object.assign({}, issueState.issue);\n      issueToUpdate.comments.push(res.data);\n      setIssueState(prev => ({ ...prev,\n        issue: issueToUpdate\n      }));\n    }).catch(err => console.log(err));\n  };\n\n  const handleVoteErr = err => {\n    setIssueState(prev => ({ ...prev,\n      voteErr: err\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(IssueContext.Provider, {\n    value: { ...issueState,\n      getIssues,\n      getIssue,\n      addIssue,\n      vote,\n      getComments,\n      addComment\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/christopher/Documents/vschoolwork/assignments/rtv/client/my-app/src/context/IssueProvider.js"],"names":["React","useState","useCallback","axios","IssueContext","createContext","issueAxios","create","interceptors","request","use","config","headers","Authorization","localStorage","getItem","initState","issues","issue","voteErr","IssueProvider","props","issueState","setIssueState","getIssues","get","then","res","prev","data","catch","err","console","log","getIssue","_id","addIssue","newIssue","post","vote","direction","put","map","handleVoteErr","response","errMsg","getComments","issueToUpdate","Object","assign","comments","push","addComment","comment","children"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport axios from \"axios\";\n\nexport const IssueContext = React.createContext();\n\nconst issueAxios = axios.create();\nissueAxios.interceptors.request.use(config => {\n  config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`;\n  return config;\n});\n\nconst initState = { issues: [], issue: {}, voteErr: \"\" };\n\nexport default function IssueProvider(props) {\n  const [issueState, setIssueState] = useState(initState);\n\n  const getIssues = useCallback(() => {\n    issueAxios\n      .get(\"/api/issue\")\n      .then(res => setIssueState(prev => ({ ...prev, issues: res.data })))\n      .catch(err => console.log(err));\n  }, []);\n\n  const getIssue = useCallback(_id => {\n    issueAxios\n      .get(`/api/issue/${_id}`)\n      .then(res => {\n        console.log(res);\n        setIssueState(prev => ({\n          ...prev,\n          issue: res.data\n        }));\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  const addIssue = newIssue => {\n    issueAxios\n      .post(\"/api/issue\", newIssue)\n      .then(res =>\n        setIssueState(prev => ({ ...prev, issues: [...prev.issues, res.data] }))\n      );\n  };\n\n  const vote = (_id, direction) => {\n    issueAxios\n      .put(`/api/issue/${direction}vote/${_id}`)\n      .then(res => {\n        setIssueState(prev => ({\n          ...prev,\n          issues: prev.issues.map(issue =>\n            issue._id === _id ? res.data : issue\n          )\n        }));\n      })\n      .catch(err => handleVoteErr(err.response.data.errMsg));\n  };\n\n  // get the comments for a specific post by ID\n  const getComments = useCallback(_id => {\n    issueAxios\n      .get(`/api/comment/${_id}`)\n      .then(res => {\n        setIssueState(prev => {\n          const issueToUpdate = Object.assign({}, prev.issue);\n          issueToUpdate.comments.push(...res.data);\n          return {\n            ...prev,\n            issue: issueToUpdate\n          };\n        });\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  const addComment = (_id, comment) => {\n    issueAxios\n      .post(`/api/comment/${_id}`, comment)\n      .then(res => {\n        const issueToUpdate = Object.assign({}, issueState.issue);\n        issueToUpdate.comments.push(res.data);\n        setIssueState(prev => ({\n          ...prev,\n          issue: issueToUpdate\n        }));\n      })\n      .catch(err => console.log(err));\n  };\n\n  const handleVoteErr = err => {\n    setIssueState(prev => ({ ...prev, voteErr: err }));\n  };\n\n  return (\n    <IssueContext.Provider\n      value={{\n        ...issueState,\n        getIssues,\n        getIssue,\n        addIssue,\n        vote,\n        getComments,\n        addComment\n      }}\n    >\n      {props.children}\n    </IssueContext.Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}