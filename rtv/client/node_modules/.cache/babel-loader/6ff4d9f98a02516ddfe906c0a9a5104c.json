{"ast":null,"code":"var _jsxFileName = \"/Users/christopher/Documents/vschoolwork/assignments/rtv/client/my-app/src/components/Issue/index.js\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { IssueContext } from \"../../context/IssueProvider.js\";\nimport { UserContext } from \"../../context/UserProvider.js\";\nimport AddIssueModal from \"./AddIssueModal.js\";\nimport Issue from \"./Issue.js\";\nexport default function IssueList() {\n  const {\n    getIssues,\n    issues,\n    vote,\n    addComment,\n    getComments\n  } = useContext(IssueContext);\n  const {\n    addToWatchList\n  } = useContext(UserContext);\n  const [toggle, setToggle] = useState(false);\n  useEffect(() => {\n    getIssues();\n  }, [getIssues]);\n\n  const toggler = () => setToggle(p => !p);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Add Issue\"), /*#__PURE__*/React.createElement(AddIssueModal, {\n    toggler: toggler,\n    show: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), issues.map(issue => /*#__PURE__*/React.createElement(Issue, Object.assign({}, issue, {\n    addComment: addComment,\n    getComments: getComments,\n    watchListAction: addToWatchList,\n    watchListActionText: \"Add to\",\n    vote: vote,\n    key: issue._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/christopher/Documents/vschoolwork/assignments/rtv/client/my-app/src/components/Issue/index.js"],"names":["React","useEffect","useContext","useState","IssueContext","UserContext","AddIssueModal","Issue","IssueList","getIssues","issues","vote","addComment","getComments","addToWatchList","toggle","setToggle","toggler","p","map","issue","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA,IAArB;AAA2BC,IAAAA,UAA3B;AAAuCC,IAAAA;AAAvC,MAAuDX,UAAU,CACrEE,YADqE,CAAvE;AAGA,QAAM;AAAEU,IAAAA;AAAF,MAAqBZ,UAAU,CAACG,WAAD,CAArC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;;AAIA,QAAMQ,OAAO,GAAG,MAAMD,SAAS,CAACE,CAAC,IAAI,CAACA,CAAP,CAA/B;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEA,OAAxB;AAAiC,IAAA,IAAI,EAAEF,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGL,MAAM,CAACS,GAAP,CAAWC,KAAK,iBACf,oBAAC,KAAD,oBACMA,KADN;AAEE,IAAA,UAAU,EAAER,UAFd;AAGE,IAAA,WAAW,EAAEC,WAHf;AAIE,IAAA,eAAe,EAAEC,cAJnB;AAKE,IAAA,mBAAmB,EAAC,QALtB;AAME,IAAA,IAAI,EAAEH,IANR;AAOE,IAAA,GAAG,EAAES,KAAK,CAACC,GAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CAHH,CADF;AAiBD","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport { IssueContext } from \"../../context/IssueProvider.js\";\nimport { UserContext } from \"../../context/UserProvider.js\";\nimport AddIssueModal from \"./AddIssueModal.js\";\nimport Issue from \"./Issue.js\";\n\nexport default function IssueList() {\n  const { getIssues, issues, vote, addComment, getComments } = useContext(\n    IssueContext\n  );\n  const { addToWatchList } = useContext(UserContext);\n  const [toggle, setToggle] = useState(false);\n\n  useEffect(() => {\n    getIssues();\n  }, [getIssues]);\n\n  const toggler = () => setToggle(p => !p);\n\n  return (\n    <div>\n      <button onClick={toggler}>Add Issue</button>\n      <AddIssueModal toggler={toggler} show={toggle} />\n      {issues.map(issue => (\n        <Issue\n          {...issue}\n          addComment={addComment}\n          getComments={getComments}\n          watchListAction={addToWatchList}\n          watchListActionText=\"Add to\"\n          vote={vote}\n          key={issue._id}\n        />\n      ))}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}